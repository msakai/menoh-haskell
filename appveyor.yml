platform:
- x64

environment:
  global:
    STACK_ROOT: "c:\\sr"
  matrix:
    - TARGET: mingw
    - TARGET: msvc

cache:
- "c:\\sr" # stack root, short paths == less problems

install:
- set SSL_CERT_FILE=C:\msys64\mingw64\ssl\cert.pem
- set SSL_CERT_DIR=C:\msys64\mingw64\ssl\certs
# Some conditional statements are splited to avoid "\Microsoft was unexpected at this time.” error.
# https://support.microsoft.com/ja-jp/help/2524009/error-running-command-shell-scripts-that-include-parentheses
- if [%TARGET%]==[mingw] set PATH=C:\msys64\mingw64\bin;C:\msys64\usr\bin;%PATH%
- if [%TARGET%]==[msvc] set PATH=C:\msys64\mingw64\bin;%PATH%
- if [%TARGET%]==[mingw] (
    curl -omingw-w64-x86_64-mkl-dnn-0.15-1-x86_64.pkg.tar.xz -L https://github.com/pfnet-research/menoh/releases/download/v1.0.3/mingw-w64-x86_64-mkl-dnn-0.15-1-x86_64.pkg.tar.xz &&
    pacman -U --noconfirm mingw-w64-x86_64-mkl-dnn-0.15-1-x86_64.pkg.tar.xz &&
    curl -omingw-w64-x86_64-menoh-1.0.3-1-x86_64.pkg.tar.xz -L https://github.com/pfnet-research/menoh/releases/download/v1.0.3/mingw-w64-x86_64-menoh-1.0.3-1-x86_64.pkg.tar.xz &&
    pacman -U --noconfirm mingw-w64-x86_64-menoh-1.0.3-1-x86_64.pkg.tar.xz
  ) else (
    curl -omkl-dnn-0.15-win64.7z -L --insecure https://github.com/pfnet-research/menoh/releases/download/v1.0.3/mkl-dnn-0.15-win64.zip &&
    7z x mkl-dnn-0.15-win64.7z &&
    curl -omenoh_prebuild_win_v1.0.3.zip -L --insecure https://github.com/pfnet-research/menoh/releases/download/v1.0.3/menoh_prebuild_win_v1.0.3.zip &&
    7z x menoh_prebuild_win_v1.0.3.zip
  )
- if [%TARGET%]==[msvc] set PKG_CONFIG_PATH=c:\projects\menoh-haskell\menoh_prebuild_win_v1.0.3\share\pkgconfig;%PKG_CONFIG_PATH%
- if [%TARGET%]==[msvc] set PATH=c:\projects\menoh-haskell\menoh_prebuild_win_v1.0.3\bin;c:\projects\menoh-haskell\mkl-dnn-0.15-win64\bin;c:\projects\menoh-haskell\mkl-dnn-0.15-win64\lib;%PATH%

- curl -ostack.zip -L --insecure http://www.stackage.org/stack/windows-x86_64
- 7z x stack.zip stack.exe
- stack setup > nul

build_script:
- echo "" | stack --no-terminal build --test --no-run-tests

test_script:
- echo "" | stack --no-terminal test
- stack exec mnist_example
